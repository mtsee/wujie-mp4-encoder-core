function decodeFrameImage(e,a){const{url:s,startTime:t=0,noAudioTracks:o,aspectRatio:r=1,frameScale:l=1,videoRotation:f=0}=e,n=e.frameHeight*l,d=n*r;self.frames={},self.canvas=a;const c=debounce((()=>{self.drawIndex=0,self.frameIndex=0,self.canvas.convertToBlob({type:"image/jpeg",quality:.7}).then((e=>{self.postMessage({type:"drawFrameImageSuccess",data:{url:URL.createObjectURL(e),rotate:self.rotate,noAudioTracks:o}})}))}),500),i=new OffscreenCanvas(n,d),m=i.getContext("2d"),u=new VideoDecoder({output:async e=>{if(self.frameIndex%self.fps==0){if(console.log("self.rotate---\x3e",self.rotate,f),self.rotate){m.save(),m.translate(i.width/2,i.height/2),m.rotate(f*Math.PI/180),m.drawImage(e,-d/2,-n/2,d,n),m.restore();const a=await createImageBitmap(i);self.ctx.drawImage(a,self.drawIndex*d,0,d,n)}else self.ctx.drawImage(e,self.drawIndex*d,0,d,n);self.drawIndex++}self.frames[self.frameIndex]=e,self.frameIndex++,e.close(),c()},error(e){console.error("decode error:",e),postMessage({type:"end"})}});new MP4Demuxer(s,{onConfig:e=>{if(console.log("开始解码2",e,s),e.error)console.error("不支持的编码格式",e),postMessage({type:"end"});else{["hev","hvc"].includes(e.codec.substring(0,3))?console.log(e.codec):e.codec="avc1.420034",u.configure(e),self.totalFrame=e.nb_samples-2,self.duration=e.movie_duration/e.movie_timescale,self.noAudioTracks=o,self.startFrameIndex=Math.floor(t/self.duration*self.totalFrame);const a=Number((e.codedWidth/e.codedHeight).toFixed(1))-Number(r.toFixed(1));self.rotate=Math.abs(a)>.5,self.fps=Math.ceil(self.totalFrame/self.duration),self.canvas.width=self.duration*d,self.canvas.height=n,self.ctx=self.canvas.getContext("2d"),self.drawIndex=0,self.frameIndex=0,postMessage({type:"drawFrameImageBefore",data:{noAudioTracks:self.noAudioTracks,totalFrame:self.totalFrame,duration:self.duration,startFrameIndex:self.startFrameIndex,rotate:self.rotate,frameScale:l}})}},onChunk:e=>{u.decode(e)},setStatus:(e,a)=>{console.log("msg",e,a)}})}function removeFrame(e){for(let a in self.frames)void 0!==self.frames[a]&&Number(a)<e&&(self.frames[a].close(),delete self.frames[a])}function removeFrameAll(){for(let e in self.frames)void 0!==self.frames[e]&&self.frames[e].close(),delete self.frames[e]}async function decodeClipTime(){if(!self.decodeClipTimeLock)for(self.decodeClipTimeLock=!0;!self.frames[self.startFrameIndex];)removeFrame(Math.max(self.startFrameIndex,0)),await sleep(8)}async function decodeFrameByTime(e){const{time:a,duration:s,relativeTime:t}=e,o=a?Math.floor(a/self.duration*self.totalFrame):0;if(!self.frames)return console.error("解码time失败，worker已经回收",a,self.elementId),void postMessage({type:"end"});const r=self.frames[o];r&&self.hasDrawFrameIndex!==o&&self.canvas&&(self.ctx.drawImage(r,0,0,self.canvas.width,self.canvas.height),self.hasDrawFrameIndex=o),postMessage({type:"draw",data:{frameIndex:o,bitmap:self.returnBitmap?self.canvas.transferToImageBitmap():null}}),t>s?(console.log("超出时间了"),removeFrameAll()):removeFrame(o),o>=self.totalFrame&&(removeFrameAll(),self.frames={},postMessage({type:"end"}))}function clearCanvas(){self.ctx.fillStyle="rgba(0,0,0,1)",self.ctx.fillRect(0,0,this._canvas.width,this._canvas.height)}function initDecodeVideo(e,a){const{url:s,clipTime:t=0,aspectRatio:o=1,rotation:r=0,noAudioTracks:l,elementId:f,returnBitmap:n}=e;self.noAudioTracks=l,self.elementId=f,self.returnBitmap=n,self.frames={},self.frameIndex=0,self.hasDrawFrameIndex=-1,a&&(self.canvas=a,self.ctx=a.getContext("2d"));const d=new VideoDecoder({output:e=>{self.frames[self.frameIndex]=e,self.frameIndex++},error(a){console.error("decode",a,e)}});new MP4Demuxer(s,{onConfig:e=>{if(console.log("MP4Demuxer->config",{...e}),e.error)console.error("不支持的编码格式",e),postMessage({type:"end"});else{if(["hev","hvc"].includes(e.codec.substring(0,3))?console.log(e.codec):e.codec="avc1.420034",d.configure(e),self.totalFrame=e.nb_samples-2,self.duration=e.movie_duration/e.movie_timescale,self.noAudioTracks=l,self.startFrameIndex=Math.floor(t/self.duration*self.totalFrame),self.rotate=r%360!=0,r){const e=self.canvas.width/self.canvas.height;self.ctx.translate(self.canvas.width/2,self.canvas.height/2),self.ctx.scale(e,self.canvas.height/self.canvas.width),self.ctx.rotate(r*Math.PI/180),self.ctx.translate(-self.canvas.width/2,-self.canvas.height/2)}console.log("开始解码？？？？？",self.rotate,e,self.startFrameIndex),postMessage({type:"decodeMP4DemuxerSuccess"})}},onChunk:e=>{d.decode(e)},setStatus:async(e,a)=>{console.log(e,a),"Ready"===a&&(await decodeClipTime(),console.log("解码准备工作完成",self),postMessage({type:"ready",data:{noAudioTracks:self.noAudioTracks,totalFrame:self.totalFrame,duration:self.duration,startFrameIndex:self.startFrameIndex,rotate:self.rotate}}))}})}function debounce(e,a){let s=null;return function(...t){s&&clearTimeout(s),s=setTimeout((()=>{e.apply(this,t)}),a)}}function sleep(e){return new Promise((a=>{setTimeout((()=>{a()}),e)}))}importScripts("./demuxer.worker.js"),self.addEventListener("message",(e=>{switch(e.data.type){case"initDecodeVideo":initDecodeVideo(e.data.options,e.data.canvas);break;case"decodeFrameByTime":decodeFrameByTime(e.data);break;case"decodeFrameImage":decodeFrameImage(e.data.options,e.data.canvas);break;case"destroy":for(const e in self.frames)self.frames[e]&&(self.frames[e].close(),delete self.frames[e]);self.frames=null,delete self.frames,delete self.frameIndex,delete self.hasDrawFrameIndex,delete self.noAudioTracks,delete self.startFrameIndex,self.canvas&&(delete self.canvas,delete self.ctx)}}));